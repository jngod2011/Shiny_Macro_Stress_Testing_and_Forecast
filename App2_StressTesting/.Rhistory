if (length(ivlist)==1)
{
#get data
eval(parse(text=paste0("data<-Quandl(code=",str,",type='raw',",ifelse(transform=="NULL","transform=NULL,",paste0("transform='",transform,"',")),ifelse(frequency=="NULL","collapse=NULL,",paste0("collapse='",frequency,"',")),"order='asc',meta=TRUE,force_irregular = TRUE)")))
}else{
for (count in 1:length(ivlist)){
if (count==1){
str<-paste0("'",ivlist[count],"',")
}else if (count<length(ivlist)){
str<-paste0(str,"'",ivlist[count],"',")
}else{
str<-paste0(str,"'",ivlist[count],"'")
}
}
str<-paste0("c(",str,")")
#get data
eval(parse(text=paste0("data1<-Quandl(code=",str,",type='ts',","transform=NULL,frequency==NULL,collapse=NULL,order='asc',meta=TRUE,force_irregular = TRUE)")))
}
str
eval(parse(text=paste0("data1<-Quandl(code=",str,",type='ts',","transform=NULL,frequency==NULL,collapse=NULL,order='asc',meta=TRUE,force_irregular = TRUE)")))
str
paste0("data1<-Quandl(code=",str,",type='ts',","transform=NULL,frequency==NULL,collapse=NULL,order='asc',meta=TRUE,force_irregular = TRUE)")
eval(parse(text=paste0("data1<-Quandl(code=",str,",type='ts',","transform=NULL,frequency=NULL,collapse=NULL,order='asc',meta=TRUE,force_irregular = TRUE)")))
i=1
depvar<-data[,i]
indepvar<-data1
modeldata<-as.data.frame(merge.xts(depvar,indepvar,inner=TRUE))
modeldata<-as.data.frame(merge.zoo(depvar,indepvar,inner=TRUE))
View(modeldata)
modeldata<-na.omit(as.data.frame(merge.zoo(depvar,indepvar)))
view(as.data.frame(data))
View(as.data.frame(data))
View(as.data.frame(data1))
x<-na.locf(data)
x<-as.data.frame(na.locf(data))
View(x)
depvar<-na.locf(data[,i])
indepvar<-na.locf(data1)
modeldata<-as.data.frame(merge.zoo(depvar,indepvar))
View(modeldata)
depvar
depvar<-na.locf(data[,i])
indepvar<-na.locf(data1)
modeldata<-as.data.frame(merge.zoo(depvar,indepvar))
depvar<-na.locf(data[,i])
indepvar<-na.locf(data1)
modeldata<-as.data.frame(merge.zoo(depvar,indepvar))
View(modeldata)
depvar<-data[,i]
indepvar<-data1
modeldata<-as.data.frame(na.locf(merge.zoo(depvar,indepvar)))
View(modeldata)
colnames(modeldata)[1]<-serieslist[i]
View(modeldata)
modeldata<-na.omit(as.data.frame(na.locf(merge.zoo(depvar,indepvar))))
colnames(modeldata)[1]<-serieslist[i]
View(modeldata)
View(modeldata)
colnames(modeldata)
eval(parse(text=paste0("lm(",serieslist[i],"~.data=modeldata")))
eval(parse(text=paste0("lm(",serieslist[i],"~.,data=modeldata")))
eval(parse(text=paste0("lm(",serieslist[i],"~.,data=modeldata")))
colnames(modeldata)[1]<-str_replace(serieslist[i],"/",".")
eval(parse(text=paste0("lm(",str_replace(serieslist[i],"/","."),"~.,data=modeldata")))
eval(parse(text=paste0("lm(",str_replace(serieslist[i],"/","."),"~.,data=modeldata")))
eval(parse(text=paste0("lm(",str_replace(serieslist[i],"/","."),"~.,data=modeldata)")))
which(ivlist =="NA")
length(which(ivlist =="NA"))
length(which(ivlist !="NA"))
library(Quandl)
Quandl.api_key("y7xCCmMxsc8_nddWS-yz")
serieslist<-unlist(strsplit("FRED/NROU,FRED/B060RC0A144NBEA",","))
ivlist<-c("FRED/GDP","FRED/PCECC96","FRED/RINV","FRED/LNU01000000","RATEINF/INFLATION_USA","PERTH/FEDF_M")
ivna<-which(ivlist !="NA")
ivlist<-ivlist[ivlist!="NA"]
if (length(serieslist)==1)
{
#get data
eval(parse(text=paste0("data<-Quandl(code=",ivlist,",type='raw',",ifelse(transform=="NULL","transform=NULL,",paste0("transform='",transform,"',")),ifelse(frequency=="NULL","collapse=NULL,",paste0("collapse='",frequency,"',")),"order='asc',meta=TRUE,force_irregular = TRUE)")))
}else{
for (count in 1:length(serieslist)){
if (count==1){
str<-paste0("'",serieslist[count],"',")
}else if (count<length(serieslist)){
str<-paste0(str,"'",serieslist[count],"',")
}else{
str<-paste0(str,"'",serieslist[count],"'")
}
}
str<-paste0("c(",str,")")
#get data
eval(parse(text=paste0("data<-Quandl(code=",str,",type='ts',","transform=NULL,frequency==NULL,collapse=NULL,order='asc',meta=TRUE,force_irregular = TRUE)")))
}
if (length(serieslist)==1)
{
#get data
eval(parse(text=paste0("data<-Quandl(code=",ivlist,",type='raw',",ifelse(transform=="NULL","transform=NULL,",paste0("transform='",transform,"',")),ifelse(frequency=="NULL","collapse=NULL,",paste0("collapse='",frequency,"',")),"order='asc',meta=TRUE,force_irregular = TRUE)")))
}else{
for (count in 1:length(serieslist)){
if (count==1){
str<-paste0("'",serieslist[count],"',")
}else if (count<length(serieslist)){
str<-paste0(str,"'",serieslist[count],"',")
}else{
str<-paste0(str,"'",serieslist[count],"'")
}
}
str<-paste0("c(",str,")")
#get data
eval(parse(text=paste0("data<-Quandl(code=",str,",type='ts',","transform=NULL,frequency=NULL,collapse=NULL,order='asc',meta=TRUE,force_irregular = TRUE)")))
}
if (length(ivlist)==1)
{
#get data
eval(parse(text=paste0("data<-Quandl(code=",str,",type='raw',",ifelse(transform=="NULL","transform=NULL,",paste0("transform='",transform,"',")),ifelse(frequency=="NULL","collapse=NULL,",paste0("collapse='",frequency,"',")),"order='asc',meta=TRUE,force_irregular = TRUE)")))
}else{
for (count in 1:length(ivlist)){
if (count==1){
str<-paste0("'",ivlist[count],"',")
}else if (count<length(ivlist)){
str<-paste0(str,"'",ivlist[count],"',")
}else{
str<-paste0(str,"'",ivlist[count],"'")
}
}
str<-paste0("c(",str,")")
#get data
eval(parse(text=paste0("data1<-Quandl(code=",str,",type='ts',","transform=NULL,frequency=NULL,collapse=NULL,order='asc',meta=TRUE,force_irregular = TRUE)")))
}
sim<-read.csv(simdf)
setwd("~/Documents/App2_StressTesting")
sim<-read.csv(simdf)
sim<-read.csv('simdf.csv')
View(sim)
ncol(sim)
length(unique(sim$varname))
foremat<-matrix(0,nrow(sim)/length(unique(sim$varname)),length(ncol(sim)-1)
)
foremat<-matrix(0,nrow(sim)/length(unique(sim$varname)),length(ivlist)*(ncol(sim)-1))
ivna<-which(ivlist !="NA")
simdf<-read.csv('simdf.csv')
foremat<-matrix(0,nrow(sim)/length(unique(sim$varname)),length(ivlist)*(ncol(sim)-1))
i=1
latest<-Quandl('FRED/GDP',type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='Y',1:ncol(simdf)-1]
)
)
ann=4
simirf<-ann*100*(exp(simdf[simdf$varname=='Y',1:ncol(simdf)-1]/100)-1)
View(simirf)
data<-t(1+simirf)*latest[1,2]
View(data)
View(simirf)
simdf<-read.csv('simdf.csv')
foremat<-matrix(0,nrow(sim)/length(unique(sim$varname)),length(ivlist)*(ncol(sim)-1))
for (count in 1:(ncol(simdf)-1))
{
for (i in 1:length(ivlist)){
if (ivna[i]==1){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='Y',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==2){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='C',1:ncol(simdf)-1][,count]/100)-1)
data<-t(1+simirf)*latest[1,2]
}
if (ivna[i]==3){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='I',1:ncol(simdf)-1][,count]/100)-1)
data<-t(1+simirf)*latest[1,2]
}
if (ivna[i]==4){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='L',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (ivna[i]==5){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='pi',1:ncol(simdf)-1][,count]/100)-1)
data<-t(1+simirf)*latest[1,2]
}
if (ivna[i]==6){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='R',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (count==1 && i==1){
indepdata<-data
}else{
indepdata<-cbind(indepdata,data)
}
}
}
View(indepdata)
42042/14
View(indepdata)
i=1
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='Y',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
count=1
for (i in 1:length(ivlist)){
if (ivna[i]==1){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='Y',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==2){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='C',1:ncol(simdf)-1][,count]/100)-1)
data<-t(1+simirf)*latest[1,2]
}
if (ivna[i]==3){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='I',1:ncol(simdf)-1][,count]/100)-1)
data<-t(1+simirf)*latest[1,2]
}
if (ivna[i]==4){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='L',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (ivna[i]==5){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='pi',1:ncol(simdf)-1][,count]/100)-1)
data<-t(1+simirf)*latest[1,2]
}
if (ivna[i]==6){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='R',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (count==1 && i==1){
indepdata<-data
}else{
indepdata<-cbind(indepdata,data)
}
}
i=1
if (ivna[i]==1){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='Y',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
ivna[i]==2
if (count==1 && i==1){
indepdata<-data
}else{
indepdata<-cbind(indepdata,data)
}
i=1
ivna[i]==1
i=2
ivna[i]==1
if (ivna[i]==2){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='C',1:ncol(simdf)-1][,count]/100)-1)
data<-t(1+simirf)*latest[1,2]
}
if (count==1 && i==1){
indepdata<-data
}else{
indepdata<-cbind(indepdata,data)
}
for (i in 1:length(ivlist)){
if (ivna[i]==1){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='Y',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==2){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='C',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame(t(1+simirf)*latest[1,2])
}
if (ivna[i]==3){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='I',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame(t(1+simirf)*latest[1,2])
}
if (ivna[i]==4){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='L',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (ivna[i]==5){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='pi',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame(t(1+simirf)*latest[1,2])
}
if (ivna[i]==6){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='R',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (count==1 && i==1){
indepdata<-data
}else{
indepdata<-cbind(indepdata,data)
}
}
View(data)
i=6
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='R',1:ncol(simdf)-1][,count])*latest[1,2]
i=5
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='pi',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame(t(1+simirf)*latest[1,2])
i=2
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='C',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame(t(1+simirf)*latest[1,2])
i=4
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='L',1:ncol(simdf)-1][,count])*latest[1,2]
for (i in 1:length(ivlist)){
if (ivna[i]==1){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='Y',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==2){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='C',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==3){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='I',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==4){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='L',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (ivna[i]==5){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='pi',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==6){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='R',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (count==1 && i==1){
indepdata<-data
}else{
indepdata<-cbind(indepdata,data)
}
}
View(indepdata)
View(indepdata)
for (count in 1:(ncol(simdf)-1))
{
for (i in 1:length(ivlist)){
if (ivna[i]==1){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='Y',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==2){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='C',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==3){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='I',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==4){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='L',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (ivna[i]==5){
latest<-Quandl(ivlist[ivna[i]],type='raw')
simirf<-ann*100*(exp(simdf[simdf$varname=='pi',1:ncol(simdf)-1][,count]/100)-1)
data<-as.data.frame((1+simirf)*latest[1,2])
}
if (ivna[i]==6){
latest<-Quandl(ivlist[ivna[i]],type='raw')
data<-as.data.frame(1+simdf[simdf$varname=='R',1:ncol(simdf)-1][,count])*latest[1,2]
}
if (count==1 && i==1){
indepdata<-data
}else{
indepdata<-cbind(indepdata,data)
}
}
}
View(indepdata)
j=1
indep<-indepdata[,((j-1)*length(ivlist)):(j*length(ivlist)-1)]
((j-1)*length(ivlist))
(j*length(ivlist)-1)
indep<-indepdata[,((j-1)*length(ivlist)+1):(j*length(ivlist))]
((j-1)*length(ivlist)+1):(j*length(ivlist))
i=1
eval(parse(text=paste0("fit<-lm(",str_replace(serieslist[i],"/","."),"~.,data=modeldata)")))
depvar<-data[,i]
indepvar<-data1
serieslist<-unlist(strsplit("FRED/NROU,FRED/B060RC0A144NBEA",","))
ivlist<-c("FRED/GDP","FRED/PCECC96","FRED/RINV","FRED/LNU01000000","RATEINF/INFLATION_USA","PERTH/FEDF_M")
ivna<-which(ivlist !="NA")
ivlist<-ivlist[ivlist!="NA"]
if (length(serieslist)==1)
{
#get data
eval(parse(text=paste0("dvdata<-Quandl(code=",ivlist,",type='raw',",ifelse(transform=="NULL","transform=NULL,",paste0("transform='",transform,"',")),ifelse(frequency=="NULL","collapse=NULL,",paste0("collapse='",frequency,"',")),"order='asc',meta=TRUE,force_irregular = TRUE)")))
}else{
for (count in 1:length(serieslist)){
if (count==1){
str<-paste0("'",serieslist[count],"',")
}else if (count<length(serieslist)){
str<-paste0(str,"'",serieslist[count],"',")
}else{
str<-paste0(str,"'",serieslist[count],"'")
}
}
str<-paste0("c(",str,")")
#get data
eval(parse(text=paste0("dvdata<-Quandl(code=",str,",type='ts',","transform=NULL,frequency=NULL,collapse=NULL,order='asc',meta=TRUE,force_irregular = TRUE)")))
}
if (length(ivlist)==1)
{
#get data
eval(parse(text=paste0("ivdata<-Quandl(code=",str,",type='raw',",ifelse(transform=="NULL","transform=NULL,",paste0("transform='",transform,"',")),ifelse(frequency=="NULL","collapse=NULL,",paste0("collapse='",frequency,"',")),"order='asc',meta=TRUE,force_irregular = TRUE)")))
}else{
for (count in 1:length(ivlist)){
if (count==1){
str<-paste0("'",ivlist[count],"',")
}else if (count<length(ivlist)){
str<-paste0(str,"'",ivlist[count],"',")
}else{
str<-paste0(str,"'",ivlist[count],"'")
}
}
str<-paste0("c(",str,")")
#get data
eval(parse(text=paste0("ivdata<-Quandl(code=",str,",type='ts',","transform=NULL,frequency=NULL,collapse=NULL,order='asc',meta=TRUE,force_irregular = TRUE)")))
}
n<-ncol(indepdata)/length(ivna)
depvar<-dvdata[,i]
indepvar<-ivdata
modeldata<-na.omit(as.data.frame(na.locf(merge.zoo(depvar,indepvar))))
View(modeldata)
colnames(modeldata)[1]<-str_replace(serieslist[i],"/",".")
View(modeldata)
eval(parse(text=paste0("fit<-lm(",str_replace(serieslist[i],"/","."),"~.,data=modeldata)")))
indep<-indepdata[,((j-1)*length(ivlist)+1):(j*length(ivlist))]
colnames(indep)<-colnames(modeldata)[2:ncol(modeldata)]
pred<-predict(fit, newdata=indep)
ncsim<-as.data.frame(pred)
for (j in 1:n){
indep<-indepdata[,((j-1)*length(ivlist)+1):(j*length(ivlist))]
colnames(indep)<-colnames(modeldata)[2:ncol(modeldata)]
pred<-predict(fit, newdata=indep)
if (j==1){
ncsim<-as.data.frame(pred)
}else{
ncsim<-cbind(ncsim,pred)
}
}
View(ncsim)
x="test"
length(x)
View(ncsim)
quantile(ncsim, c(1, 3)/4)
quantile(ncsim$pred, c(1, 3)/4)
for (i in 1:14)
{
if (i==1)
str<-"Period_1"
else
str<-c(str,paste0("Period_",i))
}
colnames(ncsim)<-c("Sim#",str)
View(ncsim)
ncsim$id<-row.names(ncsim)
colnames(ncsim)<-c(str,"Sim#")
quantile(ncsim, c(1, 3)/4)
testsim<-t(ncsim)
View(testsim)
colQuantileC(ncsim, 0.5)
install.packages("WGCNA")
library(WGCNA)
colQuantileC(ncsim, 0.5)
shiny::runApp()
install.packages(c("markdown", "Quandl", "shinythemes"))
shiny::runApp()
install.packages("shinyBS")
runApp()
install.packages("googleVis")
runApp()
install.packages("reshape")
runApp()
install.packages("mc2d")
runApp()
install.packages("matrixStats")
runApp()
install.packages("C:/Users/finar/Downloads/gEcon_1.0.2.zip", repos = NULL, type = "win.binary")
runApp()
install.packages("nleqslv")
runApp()
install.packages("DataCombine")
runApp()
install.packages("fBasics")
runApp()
runApp()
library(gEcon)
runApp()
runApp()
runApp()
runApp()
runApp()
